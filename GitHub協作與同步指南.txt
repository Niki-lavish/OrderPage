=== GitHub 協作與同步指南 (使用 GitHub 桌面版) ===

這份指南旨在幫助團隊成員，順暢地使用 GitHub 桌面版，來同步本地電腦與雲端儲存庫之間的程式碼，並解決首次設定自動化部署時的常見問題。

---

### 第一部分：日常開發的「同步」工作流

我們的開發流程，遵循「先拉後推」的黃金準則，確保每個人總是在最新的程式碼基礎上工作。

#### 1. 將本地變更，同步到雲端 (Push)

當您在自己的電腦上完成了一部分工作 (例如：修改了文字、新增了圖片)，並想將這些變更分享給團隊或部署到網站時，請執行此操作。

*   **步驟**:
    1.  **打開 GitHub 桌面版應用程式**。
    2.  應用程式會自動偵測到您修改過的檔案，並將它們顯示在左側的「Changes」區域。
    3.  在左下角的「**Summary**」(摘要) 輸入框中，用一句話簡短描述您這次做了什麼修改 (例如：「更新聯絡方式」、「修正首頁錯字」)。
    4.  點擊藍色的「**Commit to main**」按鈕，將這次的變更打包成一個「提交記錄」。
    5.  點擊頂部出現的藍色按鈕「**Push origin**」，將這個提交記錄，正式推送到雲端的 GitHub 儲存庫。

#### 2. 將雲端變更，同步回本地 (Pull)

當您的同事推送了新的變更，或者您準備開始一天的工作時，請務必先執行此操作，以確保您的本地程式碼是最新版本。

*   **步驟**:
    1.  **打開 GitHub 桌面版應用程式**。
    2.  它會自動偵測雲端是否有您本地沒有的更新。如果有的話，頂部會出現一個藍色的按鈕。
    3.  點擊「**Fetch origin**」，它會先去「偵查」雲端有哪些新東西。
    4.  偵查完畢後，按鈕會變成「**Pull origin**」。請點擊它。
    5.  點擊後，所有雲端上的最新程式碼，就會被完整地下載並合併到您本地的專案資料夾中。您的電腦就和雲端同步了。

--- 

### 第二部分：首次設定的「疑難排解」手冊

在設定 CI/CD 自動化部署流程時，可能會遇到一些「一次性」的環境設定問題。以下是解決方案。

#### 問題一：在終端機輸入 `firebase login:ci` 時，顯示 `command not found` (指令找不到)。

*   **原因**: 您的電腦，還不認識 `firebase` 這個指令。這是因為「Firebase 指令工具箱」尚未在您的電腦上進行「全域安裝」。
*   **解決方案**:
    1.  在您電腦的**任何位置**打開「終端機」或「命令提示字元 (cmd)」。
    2.  輸入以下指令，然後按下 Enter 鍵，來進行全域安裝：
        ```bash
        npm install -g firebase-tools
        ```
    3.  等待安裝完成後，再重新執行 `firebase login:ci` 指令即可。

#### 問題二：執行 `firebase login:ci` 後，瀏覽器顯示「您無法使用 Google Cloud Platform...可能是機構已關閉服務」。

*   **原因**: 您當前在瀏覽器中登入的 Google 帳號 (通常是學校或公司的帳號)，其管理員限制了使用 Firebase 這類開發者服務的權限。
*   **解決方案**:
    1.  **登出受限帳號**: 打開您的網頁瀏覽器 (Chrome, Edge 等)，前往 google.com，點擊右上角頭像，將當前的學校/公司帳號完全登出。
    2.  **登入個人帳號**: 重新登入一個您個人的 Google 帳號 (以 `@gmail.com` 結尾的帳號)。
    3.  **重新執行指令**: 回到終端機，**再一次**執行 `firebase login:ci` 指令。
    4.  **完成授權**: 這一次，瀏覽器會使用您的個人帳號來請求授權，點擊「允許」後，您就能在終端機中成功獲取到權杖 (Token) 了。
